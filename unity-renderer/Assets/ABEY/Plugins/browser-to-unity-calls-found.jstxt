 /* 
    the js in side this project is not was used
    I found and pulled the files loaded in a live DCL game session
    the urls are just for ref to see what the js/unity-js interaction is 
    DCL refs from live run
    https://cdn.decentraland.org/@dcl/unity-renderer/1.0.32838-20220415090933.commit-43530d2/index.js
    https://cdn.decentraland.org/@dcl/unity-renderer/1.0.32838-20220415090933.commit-43530d2/unity.framework.js.br?v=1.0.32838-20220415090933.commit-43530d2
    https://cdn.decentraland.org/@dcl/kernel/1.0.0-2227136955.commit-c4944ec/index.js
*/


// nomarl DCL world calls browser to render
SendMessageToUnity("Main","SetDebug")
SendMessageToUnity("Main","LoadProfile",JSON.stringify(e))
SendMessageToUnity("Main","SetRenderProfile",JSON.stringify({id:e}))
SendMessageToUnity("Main","CreateGlobalScene",JSON.stringify(e))
SendMessageToUnity("CharacterController","Teleport",JSON.stringify({x:e,y:i,z:n}))
SendMessageToUnity("CameraController","SetRotation",JSON.stringify({x:e,y:i,z:n,cameraTarget:r}))
SendMessageToUnity("Main","LoadParcelScenes",JSON.stringify(e[0]))
SendMessageToUnity("Main","UnloadScene",e)
SendMessageToUnity("SceneController","SendSceneMessage",e)
SendMessageToUnity("Main","SetSceneDebugPanel")
SendMessageToUnity("Main","ShowFPSPanel")
SendMessageToUnity("Main","HideFPSPanel")
SendMessageToUnity("Main","SetEngineDebugPanel")
SendMessageToUnity("Main","SetDisableAssetBundles"),
SendMessageToUnity("Main","CrashPayloadRequest")
SendMessageToUnity("Main","ActivateRendering")
SendMessageToUnity("Bridges","SetLoadingScreen",JSON.stringify(e))
SendMessageToUnity("Main","DeactivateRendering")
SendMessageToUnity("Bridges","ReportFocusOn")
SendMessageToUnity("Bridges","ReportFocusOff")
SendMessageToUnity("Bridges","UnlockCursorBrowser",e?1:0)
SendMessageToUnity("Main","BuilderReady")
SendMessageToUnity("Main","AddUserProfileToCatalog",JSON.stringify(e))
SendMessageToUnity("Main","AddWearablesToCatalog",JSON.stringify({wearables:e,context:t}))
SendMessageToUnity("Main","WearablesRequestFailed",JSON.stringify({error:e,context:t}))
SendMessageToUnity("Main","RemoveWearablesFromCatalog",JSON.stringify(e))
SendMessageToUnity("Main","ClearWearableCatalog")
SendMessageToUnity("HUDController","ShowNotificationFromJson",JSON.stringify(e))
SendMessageToUnity("HUDController","ConfigureHUDElement",JSON.stringify({hudElementId:e,configuration:t,extraPayload:n?JSON.stringify(n):null}))
SendMessageToUnity("HUDController","ShowWelcomeNotification")
SendMessageToUnity("HUDController","TriggerSelfUserExpression",e)
SendMessageToUnity("Main","UpdateMinimapSceneInformation",JSON.stringify(n))
SendMessageToUnity("TutorialController","SetTutorialEnabled",JSON.stringify(e))
SendMessageToUnity("TutorialController","SetTutorialEnabledForUsersThatAlreadyDidTheTutorial",JSON.stringify(e))
SendMessageToUnity("Main","AddMessageToChatWindow",JSON.stringify(e))
SendMessageToUnity("Main","InitializeFriends",JSON.stringify(e))
SendMessageToUnity("Main","UpdateFriendshipStatus",JSON.stringify(e))
SendMessageToUnity("Main","UpdateUserPresence",JSON.stringify(e))
SendMessageToUnity("Main","FriendNotFound",JSON.stringify(e))
SendMessageToUnity("HUDController","RequestTeleport",JSON.stringify(e))
SendMessageToUnity("Main","UpdateHotScenesList",JSON.stringify(n))
SendMessageToUnity("Main","ConnectionToRealmSuccess",JSON.stringify(e))
SendMessageToUnity("Main","ConnectionToRealmFailed",JSON.stringify(e))
SendMessageToUnity("Main","UpdateGIFPointers",JSON.stringify({id:e,width:t,height:n,pointers:r,frameDelays:o}))
SendMessageToUnity("Main","FailGIFFetch",e)
SendMessageToUnity("HUDController","UpdateBalanceOfMANA",e)
SendMessageToUnity("Bridges","RequestWeb3ApiUse",JSON.stringify({id:r,requestType:e,payload:t}))
SendMessageToUnity("HUDController","SetPlayerTalking",JSON.stringify(e))
SendMessageToUnity("HUDController","ShowAvatarEditorInSignUp")
SendMessageToUnity("Main","ForceActivateRendering")
SendMessageToUnity("HUDController","SetUserTalking",JSON.stringify({userId:e,talking:t}))
SendMessageToUnity("HUDController","SetUsersMuted",JSON.stringify({usersId:e,muted:t}))
SendMessageToUnity("HUDController","SetVoiceChatEnabledByScene",e?1:0)
SendMessageToUnity("Bridges","SetKernelConfiguration",JSON.stringify(e))
SendMessageToUnity("Bridges","SetFeatureFlagConfiguration",JSON.stringify(e))
SendMessageToUnity("Bridges","UpdateRealmsInfo",JSON.stringify(e))
SendMessageToUnity("Main","PublishSceneResult",JSON.stringify(e))
SendMessageToUnity("Main","BuilderProjectInfo",JSON.stringify({title:e,description:t,isNewEmptyProject:n}))
SendMessageToUnity("Main","BuilderInWorldCatalogHeaders",JSON.stringify(e))
SendMessageToUnity("Main","RequestedHeaders",JSON.stringify(n))
SendMessageToUnity("Main","AddAssets",JSON.stringify(e))
SendMessageToUnity("Bridges","SetENSOwnerQueryResult",JSON.stringify({searchInput:e,success:!1}));const n=[];for(const e of t)n.push((0,A.profileToRendererFormat)(e));
SendMessageToUnity("Bridges","SetENSOwnerQueryResult",JSON.stringify({searchInput:e,success:!0,profiles:n}))
SendMessageToUnity("Bridges","UnpublishSceneResult",JSON.stringify(e))
SendMessageToUnity("Bridges","InitializeQuests",JSON.stringify(e))
SendMessageToUnity("Bridges","UpdateQuestProgress",JSON.stringify(e))

// The naming makes me think this are all for the plot builder stuff
SendMessageToUnity("BuilderController",e,t) // <- SendBuilderMessage does so with this call
SendBuilderMessage("SelectGizmo",e)
SendBuilderMessage("ResetObject")
SendBuilderMessage("ZoomDelta",e.toString())
SendBuilderMessage("GetCameraTargetBuilder",e)
SendBuilderMessage("SetPlayMode",e)
SendBuilderMessage("PreloadFile",e)
SendBuilderMessage("GetMousePosition",`{"x":"${e}", "y": "${t}", "id": "${n}" }`)
SendBuilderMessage("TakeScreenshot",e)
SendBuilderMessage("SetBuilderCameraPosition",e.x+","+e.y+","+e.z)
SendBuilderMessage("SetBuilderCameraRotation",e+","+t)
SendBuilderMessage("ResetBuilderCameraZoom")
SendBuilderMessage("SetGridResolution",JSON.stringify({position:e,rotation:t,scale:n}))
SendBuilderMessage("SetSelectedEntities",JSON.stringify({entities:e}))
SendBuilderMessage("ResetBuilderScene")
SendBuilderMessage("OnBuilderKeyDown",e)
SendBuilderMessage("SetBuilderConfiguration",JSON.stringify(e))


// nomarl DCL world calls browser to render
SendMessageToUnity("Main","DumpScenesLoadInfo")
SendMessageToUnity("Main","DumpRendererLockersInfo")
SendMessageToUnity("Main","RunPerformanceMeterTool",e)
SendMessageToUnity("Main","InstantiateBotsAtWorldPos",JSON.stringify(e))
SendMessageToUnity("Main","InstantiateBotsAtCoords",JSON.stringify(e))
SendMessageToUnity("Main","StartBotsRandomizedMovement",JSON.stringify(e))
SendMessageToUnity("Main","StopBotsMovement")
SendMessageToUnity("Main","RemoveBot",e)
SendMessageToUnity("Main","ClearBots")
SendMessageToUnity("Main","ToggleSceneBoundingBoxes",JSON.stringify({sceneId:r,enabled:t}))
SendMessageToUnity("Main","TogglePreviewMenu",JSON.stringify({enabled:!0}))